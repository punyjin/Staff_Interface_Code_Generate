<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PB1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxISEhUSEhIVFRUVFRUVFRUVFRUVFRUVFRUWFxUVFRUY
        HSggGBolHRUVITEhJSkrLi4uFx8zODMtNygtLiv/2wBDAQoKCgUFBQ4FBQ4rGRMZKysrKysrKysrKysr
        KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKyv/wAARCACoASwDASIAAhEBAxEB/8QA
        GAAAAwEBAAAAAAAAAAAAAAAAAAECAwf/xAAZEAEBAQEBAQAAAAAAAAAAAAAAARECEiH/xAAUAQEAAAAA
        AAAAAAAAAAAAAAAA/8QAFBEBAAAAAAAAAAAAAAAAAAAAAP/aAAwDAQACEQMRAD8A5FFREXAXDLlWAqLh
        cxWAuNOWXLTkG/DSVhy14BtF8stVAb8rjLmtJQaRcZ8rgHzGkRKL0C9R2XorQKiFanQOoqqi0EdM7F9I
        6Bnay6aVPYMemfS+kUGfRYuxHQI6Z9tOkdAxqKuooJA0r0CpWnNZRcBrGkZc1pAaRbOLnQK5acso05Br
        Kvms+WkgNJVys5GnMBcac1nzFSA25q5WXNXKDTU6m0tBelpaQHaUpVNoLtZ0XorQT0iq6qKCaz6quqx6
        oFYjFek2gnpn0us7QTaz7XWXfQM6mqqaCak6mguKiIqA05rTnplFQGuqlZyrgNYvms+WnMBpy25ZctOa
        DWKlZyqgNZVyspVSg1lVKzlPQXo1nKegvVSstOUF2s7T6rO0DtRaLSAXpN6T1UWgXVR1TtR1QIuhKm0C
        6Z1XSOqCaz6X0igmo6VU9AzqTqQVFRMOA0iozlacg05a81jarmg3lXKylXKDWVcrKVcoNZVyspVyg0lV
        Ky9Hz0DbVSspVaCxqNLQaafplo9A0tRaXougUm1PoWgnqotHVRaA6qLRai0B6L0m1PoD6qLS6QB1NO1F
        AqinUUCIVILh6nTgLiozi5QXK156YyqlBvKuVjxWkoNZVSspVyg1nR3pkuUFytOWUqpQbSnrGdfVXoGm
        layvQ0GmjUaWg0h1l6P0B9VFpddItA7U2lam0Bam0WotAWlhWjQLpJ2ooFUdVVrPoCpWgAg5BgtBKiAK
        iohUoLlVESnKDXhpKxlP0DeVcrGLlBrKqVlKLQbyqlYTtc6BrKXVT6TegaaPTPT0F+j1l6VzQWeo0rQV
        UdDS0CRaq1n1QFqbStTaAtEqbU6C7WfVFqLQOUVOjQFSdTgGmjogBgQBFwhAVhwpTgLEI4DSHekaWg2n
        Z3pjKqUGkrSVhq+ega2iJ0aCtGpKgvT56ZaNBtpaznZ+gXqbUXtPoGmptTpWgXSLT6qKBlpAB0iqtRQL
        SgpQFELRKBUjpADPCoDTlSAaQ0SnoLlOVEp6C7RqNOUFynKjT0GkPmohaDfT1lOlaC9F6RqaDSFUToXo
        FaL0jRoKtLU6Wg00rUXovQK6qNFpSgoqVpALUVVqKAIGBHDkGALErLABKTgEAAOHqQCtCQC5QmGC9Vyz
        i5QXpUtTaC9PWenoLnR+mejQaCJlPQOp0aNAFo0qA05UjQFTadqQOUJ1QCoqrBIBYcMAACAxgID1OggO
        CQSqAsGDTAsSsgKQ8NOgqHpFQV6CNPmgemBoAaVLQXKeszlBejUjQMakALU6dIAZRQFTAAAAAAABGVoD
        TQegMFgAASmAI4ABggBlgACkABKgAGCACpMABKYAGQAaWmANOGAGEAA09AAtOgADIAaaYBJ4AD//2Q==
</value>
  </data>
</root>